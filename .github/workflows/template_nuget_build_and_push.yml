name: NuGet Build and Push

on:
  workflow_call:
    inputs:
      projectPath:
        type: string
        required: true
      buildConfiguration:
        type: string
        default: 'Release'
      semanticVersion:
        type: string
        required: true
      isPreRelease:
        type: boolean
        required: true
      buildVersion:
        type: string
        required: false

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore ${{ inputs.projectPath }}

      # Set package version
      - name: Set package version
        id: versioning
        run: |
          echo "Base semantic version: ${{ inputs.semanticVersion }}"
          if [ "${{ inputs.isPreRelease }}" == "true" ]; then
            if [[ "${{ inputs.semanticVersion }}" == *"-"* ]]; then
              echo "PACKAGE_VERSION=${{ inputs.semanticVersion }}.${{ inputs.buildVersion }}" >> $GITHUB_ENV
            else
              echo "PACKAGE_VERSION=${{ inputs.semanticVersion }}-preview.${{ inputs.buildVersion }}" >> $GITHUB_ENV
            fi
          else
            echo "PACKAGE_VERSION=${{ inputs.semanticVersion }}" >> $GITHUB_ENV
          fi

      - name: Build the project
        run: dotnet build ${{ inputs.projectPath }} --configuration ${{ inputs.buildConfiguration }} /p:PackageVersion=${{ env.PACKAGE_VERSION }}

      - name: Pack the NuGet package
        run: dotnet pack ${{ inputs.projectPath }} --configuration ${{ inputs.buildConfiguration }} /p:PackageVersion=${{ env.PACKAGE_VERSION }}

      - name: Publish to NuGet
        run: dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json