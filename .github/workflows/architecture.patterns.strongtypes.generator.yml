name: Publish NuGet Package for ZEA.Architecture.Patterns.StrongTypes.Generator

on:
  push:
    branches:
      - main
      - develop
    paths:
      - '**/ZEA.Architecture.Patterns.StrongTypes.Generator/**'
  
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  extract-version:
    runs-on: ubuntu-latest
    env:
      projectName: ZEA.Architecture.Patterns.StrongTypes.Generator
    steps:
      - uses: actions/checkout@v3

      - name: Extract version from .csproj
        id: get_version
        env:
          projectName: ZEA.Architecture.Patterns.StrongTypes.Generator  # Pass the project name as env variable
        run: |
          # Use 'find' to locate the correct .csproj file dynamically by project name
          csproj_file=$(find . -name "*${{ env.projectName }}.csproj" | head -n 1)  # Ensure you target the correct project
          if [ -z "$csproj_file" ]; then
            echo "No .csproj file matching '${{ env.projectName }}' found!"
            exit 1
          fi
          echo "Found .csproj file: $csproj_file"
          
          # Extract version from the .csproj file
          VERSION=$(grep -oP '(?<=<Version>)[^<]+' "$csproj_file")
          
          if [ -z "$VERSION" ]; then
            echo "No <Version> tag found in the .csproj file!"
            exit 1
          else
            echo "Extracted version: $VERSION"
          fi
          
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # Save the version in the environment file
          echo "PROJECT_PATH=$csproj_file" >> $GITHUB_ENV  # Save the project path for use in subsequent steps
    
    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}
      PROJECT_PATH: ${{ steps.get_version.outputs.PROJECT_PATH }}

  call-template:
    needs: extract-version
    uses: ./.github/workflows/template_nuget_build_and_push.yml
    with:
      projectPath: ${{ needs.extract-version.outputs.PROJECT_PATH }}
      buildConfiguration: Release
      semanticVersion: ${{ needs.extract-version.outputs.VERSION }}
      isPreRelease: ${{ github.ref != 'refs/heads/main' }}
      buildVersion: ${{ github.run_number }}